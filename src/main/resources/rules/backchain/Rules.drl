package rules.backchain
 
import com.poc.expertsystem.model.Location;

dialect  "mvel"

global com.poc.expertsystem.model.Location query;
global com.poc.expertsystem.model.LocationResults result;

query isContainedIn( String x, String y )
  Location( x, y; )
  or
  ( Location( z, y; ) and isContainedIn( x, z; ) )
end

rule "check decision"
when
    isContainedIn(query.getEntity(), query.getLocation(); )
then
    System.out.println( "\nDecision taken--Eiffel tower is in the World" );
    System.out.println( "-----------All Facts-----------------" );
    result.setDecision(query.getEntity() + " is in " + query.getLocation())
end

rule "check decision false"
when
    not isContainedIn(query.getEntity(), query.getLocation(); )
then
    System.out.println( "\nDecision taken--Eiffel tower is not in the World");
    System.out.println( "-----------All Facts-----------------" );
    result.setDecision(query.getEntity() + " is NOT in " + query.getLocation())
end

rule "get all facts"
when
    isContainedIn(entity, location; )
then
    System.out.println( "Entity " + entity + " is in " + location );
    result.addFact("Entity " + entity + " is in " + location);
end